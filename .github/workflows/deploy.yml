on:
  push:
    branches: [canary]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: yarn install --frozen-lockfile --check-files
      - uses: actions/cache@v1
        id: cache-build
        with:
          path: '.'
          key: ${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}
      - run: yarn lint

  publishRelease:
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs: [build, lint]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: |
          git describe --exact-match

          if [[ ! $? -eq 0 ]];then
            echo "Nothing to publish, exiting.."
            exit 0;
          fi

          if [[ -z "$NPM_TOKEN" ]];then
            echo "No NPM_TOKEN, exiting.."
            exit 0;
          fi

          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

          if [[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]];
          then
            echo "Publishing canary"
            yarn run lerna publish from-git --npm-tag canary --yes

            # Make sure to exit script with code 1 if publish failed
            if [[ ! $? -eq 0 ]];then
              exit 1;
            fi
          else
            echo "Did not publish canary"
          fi

          if [[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]];then
            echo "Publishing stable"
            yarn run lerna publish from-git --yes

            # Make sure to exit script with code 1 if publish failed
            if [[ ! $? -eq 0 ]];then
              exit 1;
            fi
          else
            echo "Did not publish stable"
          fi
